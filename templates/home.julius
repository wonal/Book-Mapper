
/* Copyright 2018 Allison Wong
This program is licensed under the MIT license.  Full terms can be found at:
https://github.com/wonal/Book-Mapper/blob/master/LICENSE.   Rendering the map and markers
onto the page was implemented with the Google Maps Javascript API tutorial "Adding a 
Google Map with a Marker to Your Website", found here:
https://developers.google.com/maps/documentation/javascript/adding-a-google-map,
the code for which is licensed under the Apache 2.0 License.  Terms can be found at:
https://www.apache.org/licenses/LICENSE-2.0.
 */


/*
How to add script tags via JS came from these two Stack Overflow posts:
https://stackoverflow.com/questions/3408805/is-the-async-attribute-property-useful-if-a-script-is-dynamically-added-to-the
https://stackoverflow.com/questions/41289602/add-defer-or-async-attribute-to-dynamically-generated-script-tags-via-javascript/41289721
*/
var tag = document.createElement('script');
tag.type = 'text/javascript';
tag.async = true;
tag.defer = true;
//Paste API key below.  This is the only place in this file
tag.src = 'https://maps.googleapis.com/maps/api/js?key=APIKEYHERE&callback=initMap';
var firstForm = document.getElementsByTagName('form')[0];
firstForm.parentNode.insertBefore(tag, firstForm);

var markers = new Array(); //holds user's markers
var books = new Array();  //holds user's book titles
var map;

function initMap() { 
  var valencia = {lat: 39.40789, lng: -0.43172};
  map = new google.maps.Map(
    document.getElementById('map'), {zoom: 2, center: valencia});
};

/*
When the user submits the form to place a marker on a map, sends an ajax request to the server and receives back a list of coordinates. 
Goes through and places the markers corresponding to the coordinates onto the map.
Help in realizing how to place subsequent markers onto the map rather than reload the map 
came from this stack overflow post:
https://stackoverflow.com/questions/22773651/reload-markers-on-googles-maps-api.  
*/
$("form:first").submit(function(event) {
  event.preventDefault();
  var message = $("[name=title]").val();
  $.ajax({
    url: '/bookmarker/'+message+'?title='+message,
    type: 'GET',
    contentType: "json",
    success: function (data) {
      $("#result").html("");    //clear out any messages for other form section
      if(data.coordinates.length === 0){
        $("#markerresult").html("Looks like '" + message + "' is not in our database yet.  Please consider adding it to our database below!");
        $("[name=title]").val("");
      }
      else{
         for (var i = 0; i < data.coordinates.length; i++){
           if (data.coordinates[i].lat === 0.0 && data.coordinates[i].lng === 0.0){
             $("#markerresult").html("A location was not valid for the book: '" + message + "' and a marker was not added.");
           }
           else{
           $("[name=title]").val("");
           markers.push(data.coordinates[i]);
           books.push(message);
           var mark = new google.maps.Marker({position: data.coordinates[i], map: map});
           $("#markerresult").html("One or more markers have been added to your map.");
           }
         };
      }
    },
    error: function (data) {
      $("#markerresult").html("Looks like there was an error.");
      $("#result").html("");
    },
  });
});


/*
When the user submits the second form, adding a book and location to the database, and receives back a coordinate of 
the location added.  If it's a valid coordinate, the user's books are checked to see if the map should be updated
with this coordinate.  Otherwise, appropriate messages are displayed.
*/
$("form:last").submit(function(event) {
  event.preventDefault();
  var booktitle = $("[name=bookname]").val();
  var loc = $("[name=location]").val();
  $.ajax({
    url: '/input/'+ booktitle + '/' + loc + '?title=' + booktitle + '&location=' + loc,
    type: 'GET',
    contentType: "text",
    success: function (data) {
      if(data.lat !== 0.0 && data.lng !== 0.0){  //if valid coordinate
         if(($.inArray(booktitle, books) !== -1) && ($.inArray(data,markers)) === -1){  //if user has book on map but not this coordinate then update map
           var mark = new google.maps.Marker({position: data, map: map});
           $("#result").html("'" + booktitle + "' and '" + loc + "' have been added to the database and your map has been updated!");
         }
         else{
           $("#result").html("'" + booktitle + "' and '" + loc + "' have been added to the database!");
         }
      }
      else{
         $("#result").html("Looks like '" + booktitle + "' and '" + loc + "' were already in the database!");
      }
      $("#markerresult").html("");
      $("[name=bookname]").val("");
      $("[name=location]").val("");
    },
    error: function (data) {
      $("#result").html("There was a problem adding to the database.");
      $("#markerresult").html("");
    },
  });

});

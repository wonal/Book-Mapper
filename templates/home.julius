
/* Copyright 2018 Allison Wong
This program is licensed under the MIT license.  Full terms can be found at:
https://github.com/wonal/Book-Mapper/blob/master/LICENSE.   Rendering the map and markers
onto the page was implemented with the Google Maps Javascript API tutorial "Adding a 
Google Map with a Marker to Your Website", found here:
https://developers.google.com/maps/documentation/javascript/adding-a-google-map,
the code for which is licensed under the Apache 2.0 License.  Terms can be found at:
https://www.apache.org/licenses/LICENSE-2.0.
Help in realizing how to place subsequent markers onto the map rather than reload the map 
came from this stack overflow post:
https://stackoverflow.com/questions/22773651/reload-markers-on-googles-maps-api.  
Finally, how to add script tags via JS came from these two Stack Overflow posts:
https://stackoverflow.com/questions/3408805/is-the-async-attribute-property-useful-if-a-script-is-dynamically-added-to-the
https://stackoverflow.com/questions/41289602/add-defer-or-async-attribute-to-dynamically-generated-script-tags-via-javascript/41289721
 */

var tag = document.createElement('script');
tag.type = 'text/javascript';
tag.async = true;
tag.defer = true;
tag.src = 'https://maps.googleapis.com/maps/api/js?key=APIKEYHERE&callback=initMap';
var firstForm = document.getElementsByTagName('form')[0];
firstForm.parentNode.insertBefore(tag, firstForm);

var markers = new Array();
var map;

function initMap() { 
  var valencia = {lat: 39.40789, lng: -0.43172};
  map = new google.maps.Map(
    document.getElementById('map'), {zoom: 2, center: valencia});
};

$("form:first").submit(function(event) {
  event.preventDefault();
  var message = $("input:first").val();
  console.log(message);
  $.ajax({
    url: '/bookmarker/'+message+'?title='+message,
    type: 'GET',
    contentType: "json",
    success: function (data) {
      console.log(data);
      $("#result").html("");
      for (var i = 0; i < data.coordinates.length; i++){
        if (data.coordinates[i].lat == 0.0 && data.coordinates[i].lng == 0.0){
          $("#markerresult").html("The location was not valid for the book: " + message + " and the marker was not added.");
        }
        else{
        markers.push(data.coordinates[i]);
        var mark = new google.maps.Marker({position: data.coordinates[i], map: map});
        }
      };
    },
    error: function (data) {
      console.log(data);
    },
  });
});

$("form:last").submit(function(event) {
  event.preventDefault();
  var booktitle = $("[name=bookname]").val();
  var loc = $("[name=location]").val();
  console.log(booktitle);
  console.log(loc);
  $.ajax({
    url: '/input/'+ booktitle + '/' + loc + '?btitle=' + booktitle + '&location=' + loc,
    type: 'GET',
    contentType: "text",
    success: function (data) {
      console.log(data);
      $("#result").html(data);
    },
    error: function (data) {
      console.log(data);
      $("#result").html("There was a problem adding to the database.");
    },
  });

});